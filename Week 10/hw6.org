#+AUTHOR: Ryan Sharif
#+TITLE: Homework 6: Containerization support languages
#+LaTeX_HEADER: \usepackage{minted}
#+LaTeX_HEADER: \usemintedstyle{emacs}
#+LATEX_HEADER: \usepackage{amsthm}
#+LATEX_HEADER: \usepackage{mathtools}
#+LATEX_HEADER: \usepackage{tikz}
#+LaTeX_HEADER: \usepackage[T1]{fontenc}
#+LaTeX_HEADER: \usepackage{mathpazo}
#+LaTeX_HEADER: \usepackage{hyperref}
#+LaTeX_HEADER: \linespread{1.05}
#+LaTex_HEADER: \usepackage{usenix,epsfig,endnotes}
#+LATEX_HEADER: \usepackage{listings}
#+LATEX_HEADER: \usetikzlibrary{positioning,calc}
#+OPTIONS: toc:nil
#+LaTeX_CLASS_OPTIONS: [letterpaper,twocolumn,10pt]
#+BIBLIOGRAPHY: refs acm

# Linux Containers (LXC)
this and that. \cite{linuxlxc2016}
# Docker

# Insider-view talk
  # 5 reasons to choose Go
    # Static compilation

    # neutrality

    # what Go includes: asynchronous primitives, low-level, extensive
    # standard library and data types, duck typing

    # full development environment

    # multi architecture builds
  # Drawbacks to GO
    # maps arent't thread safe <- Â¡very important!
    # dependencies <- important
    # testing      <- important
    # building     <- important
    # no IDE (who cares)
    # verbose error handling (who cares)
    
  
# Java

# Python

# Rust

# Conclusion

\bibliographystyle{acm}
\bibliography{refs}
